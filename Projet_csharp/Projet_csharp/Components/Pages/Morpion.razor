@page "/morpion"
@rendermode InteractiveServer

<PageTitle>Morpion</PageTitle>

<div class="w-100 d-flex justify-content-center">
    <h1>Morpion</h1>
</div>

@if (!gameStarted)
{
    <div class="w-100 d-flex flex-column justify-content-center align-items-center" style="height: 40vh;">
        <div class="d-flex flex-column gap-4">
            <h4>Choisissez un mode de jeu :</h4>
            <div class="d-flex flex-row justify-content-between">
                <button class="btn btn-primary" @onclick="StartLocalGame">Jouer en local</button>
                <button class="btn btn-primary" @onclick="StartGameWithAI">Jouer contre IA</button>
            </div>
        </div>
    </div>
}
else
{
    <section class="d-flex flex-column w-100 align-items-center pt-5">
        <div class="pb-3">
            <button class="btn btn-secondary shadow border-3" @onclick="ResetGame">Recommencer</button>
        </div>
        <div class="d-flex shadow">
            <div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" style="border-bottom-right-radius: 0px; border-top-right-radius: 0px; border-bottom-left-radius: 0px; border-right: 1px solid black; border-bottom: 1px solid black" @onclick="@(() => OnButtonClick(1, 1))">@(RenderButtonContent(1, 1))</button>
                </div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" style="border-radius: 0px; border-right: 1px solid black; border-bottom: 1px solid black" @onclick="@(() => OnButtonClick(2, 1))">@(RenderButtonContent(2, 1))</button>
                </div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" style="border-bottom-right-radius: 0px; border-top-right-radius: 0px; border-right: 1px solid black" @onclick="@(() => OnButtonClick(3, 1))">@(RenderButtonContent(3, 1))</button>
                </div>
            </div>
            <div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" style="border-bottom: 1px solid black; border-right: 1px solid black; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; border-top-right-radius: 0px;" @onclick="@(() => OnButtonClick(1, 2))">@(RenderButtonContent(1, 2))</button>
                </div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" style="border-bottom: 1px solid black; border-right: 1px solid black; border-radius: 0px" @onclick="@(() => OnButtonClick(2, 2))">@(RenderButtonContent(2, 2))</button>
                </div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" style="border-right: 1px solid black; border-bottom-right-radius: 0px; border-top-right-radius: 0px" @onclick="@(() => OnButtonClick(3, 2))">@(RenderButtonContent(3, 2))</button>
                </div>
            </div>
            <div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" style="border-bottom: 1px solid black; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" @onclick="@(() => OnButtonClick(1, 3))">@(RenderButtonContent(1, 3))</button>
                </div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" style="border-bottom: 1px solid black; border-radius: 0px" @onclick="@(() => OnButtonClick(2, 3))">@(RenderButtonContent(2, 3))</button>
                </div>
                <div style="width: 150px; height: 150px;">
                    <button class="btn btn-light h-100 w-100" @onclick="@(() => OnButtonClick(3, 3))">@(RenderButtonContent(3, 3))</button>
                </div>
            </div>
        </div>

        @if (gameOver)
        {
            <div class="alert alert-info text-center mt-3">
                @if (winner == "Draw")
                {
                    <h3>Match nul !</h3>
                }
                else
                {
                    <h3>Le joueur @winner a gagné !</h3>
                }
            </div>
        }
    </section>
}
@code {

    private bool gameStarted = false;
    private bool againstAI = false;
    private bool gameOver = false;
    private string winner = "";

    private string[][] buttons = new string[][] 
    {
        new string[] { "", "", "" },
        new string[] { "", "", "" },
        new string[] { "", "", "" }
    };

    private bool isXTurn = true;
    private Random random = new Random();

    private void StartLocalGame()
    {
        gameStarted = true;
        againstAI = false;
        ResetGame();
    }

    private void StartGameWithAI()
    {
        gameStarted = true;
        againstAI = true;
        ResetGame();
    }

    private void ResetGame()
    {
        buttons = new string[][] 
        {
            new string[] { "", "", "" },
            new string[] { "", "", "" },
            new string[] { "", "", "" }
        };
        isXTurn = true;
        gameOver = false;
        winner = "";
    }

    private void CheckWin()
    {
        for (int i = 0; i < 3; i++)
        {
            if (buttons[i][0] == buttons[i][1] && buttons[i][1] == buttons[i][2] && buttons[i][0] != "")
            {
                gameOver = true;
                winner = buttons[i][0];
                return;
            }
            if (buttons[0][i] == buttons[1][i] && buttons[1][i] == buttons[2][i] && buttons[0][i] != "")
            {
                gameOver = true;
                winner = buttons[0][i];
                return;
            }
        }

        if (buttons[0][0] == buttons[1][1] && buttons[1][1] == buttons[2][2] && buttons[0][0] != "")
        {
            gameOver = true;
            winner = buttons[0][0];
            return;
        }

        if (buttons[0][2] == buttons[1][1] && buttons[1][1] == buttons[2][0] && buttons[0][2] != "")
        {
            gameOver = true;
            winner = buttons[0][2];
            return;
        }

        // Vérifier le match nul
        bool isDraw = true;
        for (int i = 0; i < 3; i++)
        {
            for (int j = 0; j < 3; j++)
            {
                if (buttons[i][j] == "")
                {
                    isDraw = false;
                    break;
                }
            }
        }

        if (isDraw)
        {
            gameOver = true;
            winner = "Draw";
        }
    }

    private void OnButtonClick(int row, int col)
    {
        if (gameOver) return; // Ne rien faire si le jeu est terminé

        if (buttons[row - 1][col - 1] == "")
        {
            buttons[row - 1][col - 1] = isXTurn ? "X" : "O";
            isXTurn = !isXTurn;

            CheckWin();

            if (!gameOver && againstAI && !isXTurn)
            {
                AITurn();
            }

            StateHasChanged();
        }
    }

    private void AITurn()
    {
        if (gameOver) return; // Ne rien faire si le jeu est terminé

        List<(int, int)> availableMoves = new List<(int, int)>();

        for (int i = 0; i < 3; i++)
        {
            for (int j = 0; j < 3; j++)
            {
                if (buttons[i][j] == "")
                {
                    availableMoves.Add((i, j));
                }
            }
        }

        if (availableMoves.Count > 0)
        {
            var (row, col) = availableMoves[random.Next(availableMoves.Count)];
            buttons[row][col] = "O";
            isXTurn = true;

            CheckWin();
        }
    }

    private RenderFragment RenderButtonContent(int row, int col)
    {
        string content = buttons[row - 1][col - 1];
        if (content == "X")
        {
            return __builder => __builder.AddMarkupContent(0, "<img width='60%' src='croix.png' />");
        }
        else if (content == "O")
        {
            return __builder => __builder.AddMarkupContent(0, "<img width='60%' src='cercle.png' />");
        }
        else
        {
            return __builder => __builder.AddContent(0, "");
        }
    }
}
